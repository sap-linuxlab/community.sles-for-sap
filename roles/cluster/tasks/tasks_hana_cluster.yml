---
# Create auto_register string
- name: Create auto_register string
  ansible.builtin.set_fact:
    int_fact_auto_register: "{{ auto_register | string | lower }}"

# Load the required variables for this scenario
- name: Include hana azure sbd cluster_config
  ansible.builtin.include_vars: azure_sbd.yml
  when:
    - platform_azure
    - stonith_sbd

- name: Include hana azure native cluster_config
  ansible.builtin.include_vars: azure_native.yml
  when:
    - platform_azure
    - stonith_native

- name: Include hana gcp native cluster_config
  ansible.builtin.include_vars: gcp_native.yml
  when:
    - platform_gcp

- name: Include hana aws native cluster_config
  ansible.builtin.include_vars: aws_native.yml
  when:
    - platform_aws

- name: Include hana generic sbd cluster_config
  ansible.builtin.include_vars: generic_sbd.yml
  when:
    - platform_generic

- name: Ensure logd is enabled and started
  ansible.builtin.systemd:
    name: logd
    state: started
    enabled: true

# The cluster configuration file is stored on the primary node, it may not be
# a bad idea to have an option to remove this.
- name: Write the pacemaker configuration
  ansible.builtin.template:
    src: cluster_config.j2
    dest: "{{ int_var_cluster_config }}"
    owner: root
    group: root
    mode: '0400'
  when: int_var_node_is_primary

- name: Configure csync2 [primary]
  ansible.builtin.command:
    crm cluster init csync2 -y
  when: int_var_node_is_primary

- name: Configure sbd
  ansible.builtin.command:
    "crm cluster init sbd -y -s {{ sbd_devices | join(',') }}"
  when:
    - int_var_node_is_primary
    - stonith_sbd

- name: Start the cluster on primary
  ansible.builtin.command:
    crm cluster start
  when: int_var_node_is_primary

- name: Ensure the cluster is started and is stable
  ansible.builtin.command: crm status
  changed_when: false
  register: int_reg_crm_status
  until: int_reg_crm_status.stdout is regex('1 node configured')
  retries: 10
  timeout: 6
  when:
    - int_var_node_is_primary
    - not ansible_check_mode

- name: Get csync2 configure on non-primary node/s
  ansible.builtin.command:
    "crm cluster join -y csync2 -c {{ hostvars[primary]['ansible_default_ipv4']['address'] }}"
  when: not int_var_node_is_primary

# The next step should have been achieved for primary, but as the module is
# idempotent, it won't cause any harm.
- name: Enable sdb on all nodes
  ansible.builtin.systemd:
    service: 'sbd'
    enabled: true
  when: stonith_sbd

- name: Start the cluster on non-primary node/s
  ansible.builtin.command:
    crm cluster start
  when: not int_var_node_is_primary

- name: Create cluster query string
  ansible.builtin.set_fact:
    int_fact_cluster_regex: "{{ ansible_play_hosts | length }} nodes configured"

- name: Ensure the cluster is started and is stable
  ansible.builtin.command: crm status
  changed_when: false
  register: int_reg_crm_status
  until: int_reg_crm_status.stdout is regex(int_fact_cluster_regex)
  retries: 10
  timeout: 6
  when:
    - int_var_node_is_primary
    - not ansible_check_mode

# Tests suggest that very high load during the HANA cluster phase can
# cause problems, especially with smaller systems. This block waits for the
# load average to drops to the number of cores in the system of the the number of cores in the systems. This is
# done for all nodes in the cluster.
# If, after all retries, the load average is still too high, a debug message
# is printed, informing the user that it will attempt to cluster, but the high
# load may still cause issues.
# Currently, the system will retry 60 times with a 10 second delay. These
# parameters may be tuneable in a future version.
- name: Wait for load average to drop
  when: not ansible_check_mode
  block:
    - name: Set 1m load average target
      ansible.builtin.set_fact:
        int_fact_ldavg_target: "{{ ansible_facts.processor_vcpus }}"

    - name: Waiting for load to drop
      ansible.builtin.command:
        cat /proc/loadavg
      register: int_reg_loadavg
      changed_when: false
      until: int_reg_loadavg.stdout | split() | first | float()
        < int_fact_ldavg_target | float()
      retries: 60
      delay: 10
      ignore_errors: true

    - name: Print load average result
      ansible.builtin.debug:
        msg: >-
          {% if int_reg_loadavg.failed %}Waited for 1m load average to fall
          below {{ int_fact_ldavg_target }}
          but it is currently {{ int_reg_loadavg.stdout | split() | first }}.
          This may lead to problems configuring the HANA cluster resource.
          {% else %}The load average reached an acceptable level
          {{ int_reg_loadavg.stdout | split() | first }}
          {% endif %}

- name: Enter cluster maintenance mode
  ansible.builtin.command:
    "crm configure property maintenance-mode=true"
  when: int_var_node_is_primary

- name: Load the cluster config
  ansible.builtin.command:
    "crm configure load update {{ int_var_cluster_config }}"
  when: int_var_node_is_primary

- name: Leave cluster maintenance mode
  ansible.builtin.command:
    crm configure property maintenance-mode=false
  when: int_var_node_is_primary

# cs_wait_for_idle will poll the cluster every 5 seconds to ensure the cluster
# is ready for another command
- name: Put the HANA master-slave resource into maintenance mode
  ansible.builtin.command:
    "crm resource maintenance msl_SAPHana_{{ hana_sid }}_HDB{{ hana_instance_number }} on"
  when: int_var_node_is_primary

- name: Wait for cluster idle
  ansible.builtin.command:
    cs_wait_for_idle --sleep 5
  changed_when: false
  when: int_var_node_is_primary

- name: Refresh the master-slave resource
  ansible.builtin.command:
    "crm resource refresh msl_SAPHana_{{ hana_sid }}_HDB{{ hana_instance_number }}"
  when: int_var_node_is_primary

- name: Wait for cluster idle
  ansible.builtin.command:
    cs_wait_for_idle --sleep 5
  changed_when: false
  when: int_var_node_is_primary

- name: Remove the HANA master-slave resource from maintenance mode
  ansible.builtin.command:
    "crm resource maintenance msl_SAPHana_{{ hana_sid }}_HDB{{ hana_instance_number }} off"
  when: int_var_node_is_primary

- name: Wait for cluster idle
  ansible.builtin.command:
    cs_wait_for_idle --sleep 5
  changed_when: false
  when: int_var_node_is_primary
