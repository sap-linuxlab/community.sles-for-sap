---
- name: Ensure that HANA sar file is unpacked
  ansible.builtin.command:
    "{{ sapcar_binary }} -xf {{ hana_sar }} -R {{ hana_unpack_directory }} -manifest SIGNATURE.SMF"
  args:
    creates: "{{ hana_unpack_directory }}/SAP_HANA_DATABASE"
  when: not int_fact_hana_installed

- name: Ensure copy of manifest file exists
  ansible.builtin.copy:
    src: "{{ hana_unpack_directory }}/{{ int_var_manifest_filename }}"
    remote_src: true
    dest: "{{ hana_unpack_directory }}/{{ int_var_hana_unpack_name }}/{{ int_var_manifest_filename }}"
    owner: "root"
    group: "root"
    mode: "0600"
  when: not int_fact_hana_installed

- name: Create temporary HANA install configuration file
  ansible.builtin.tempfile:
    state: file
    suffix: tmp_hana_install_file
  register: int_reg_tmp_hana_install_config
  when: not int_fact_hana_installed

- name: Populate installation template
  ansible.builtin.template:
    owner: "root"
    group: "root"
    mode: "0600"
    src: templates/hana_install.j2
    dest: "{{ int_reg_tmp_hana_install_config.path }}"
  when: not int_fact_hana_installed

- name: Ensure HANA is installed
  ansible.builtin.command:
    "{{ hana_unpack_directory }}/{{ int_var_hana_unpack_name }}/hdblcm --batch --configfile={{ int_reg_tmp_hana_install_config.path }}"
  when: not int_fact_hana_installed

- name: Remove installation template
  ansible.builtin.file:
    path: "{{ int_reg_tmp_hana_install_config.path }}"
    state: absent
  when: not int_fact_hana_installed

- name: Set HANA install fact to true
  ansible.builtin.set_fact:
    int_fact_hana_installed: true | bool
  when: not int_fact_hana_installed
